import streamlit as st
import pandas as pd
st.title("üìä Mod√©lisation des mod√®les de Machine Learning et de Deep Learning")
tab1, tab2, tab3 = st.tabs(["XGboost 5 Classes", "XGBoost Binaire", "Deep Learning" ])
with tab1:
    
    st.subheader("XGBOOST - 5 Classes")
    
    
    with st.expander("üìå **R√©sum√© de la performance du mod√®le**", expanded=False):
        col1 , col2  = st.columns([3,2])
        with col1:
            st.markdown("### üìà Matrice de confusion - Mod√®le XGBoost 5 classes")
            st.image("src/streamlit/img/xgboost_5_classes_cm.png", caption="Matrice de confusion 5 classes", use_container_width=True)
            st.markdown("> ‚úÖ Mod√®le entra√Æn√© sur un dataset √† 5 classes.")

            st.markdown("---")
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("### üìä M√©triques principales")
            st.code("""accuracy  : 0.48
RMSE  : 1.06""", language="python")
        with col2:
            st.markdown("### Param√®tres Utilis√©s :")
            st.markdown("""
- `n_estimators` : **100**  
- `max_depth` : **3**  
- `learning_rate` : **0.1**""")

    with st.expander("üöÄ **Mod√®le am√©liorable ?**", expanded=False):
        col1 , col2  = st.columns([3,2])
        with col1:
            st.markdown("### üîç On remarque qu'en regroupant les notes (1, 2, 3) et (4, 5), on obtiendrait un mod√®le tr√®s performant.")
            st.image("src/streamlit/img/xgboost_5_classes_to_2_classes.png", caption="Matrice de confusion en binaire ?", use_container_width=True)

        
with tab2:
    st.subheader("XGBOOST - Binaire")
    with st.expander("üìå **R√©sum√© de la performance du mod√®le**", expanded=False):
        col1, col2 = st.columns(2)

        with col1:
            st.markdown("### üî¢ Distribution des classes")
            st.write("R√©partition stable dans les datasets `train` et `test` :")
            st.markdown("- **60%** de **n√©gatifs** (0)  \n- **40%** de **positifs** (1)")
            st.image("src/streamlit/img/distribution.png", caption="Distribution des classes dans y_test_bin", use_container_width=True)

        with col2:
            st.markdown("### üìà Matrice de confusion - Mod√®le XGBoost binaire")
            st.image("src/streamlit/img/XGBoost - Binaire_confusion_matrix.png", caption="Matrice de confusion", use_container_width=True)
            st.markdown("> ‚úÖ Mod√®le entra√Æn√© sur un dataset √† 2 classes.")

        st.markdown("---")

        st.markdown("### üìä M√©triques principales")

        st.code("""accuracy  : 0.862
roc_auc   : 0.929
f1_score  : 0.832""", language="python")

    with st.expander("‚öôÔ∏è Optimisation des hyperparam√®tres", expanded=False):
        col1, col2 = st.columns(2)

        with col1:
            st.markdown("### üîç Hyperparam√®tres test√©s via `GridSearchCV`")
            st.markdown("""
    - `n_estimators` : 50, 100, 200  
    - `max_depth` : 3, 6, 9  
    - `learning_rate` : 0.01, 0.1, 0.3
            """)

        with col2:
            st.markdown("### ‚úÖ Meilleurs param√®tres trouv√©s :")
            st.markdown("""
    - `n_estimators` : **200**  
    - `max_depth` : **9**  
    - `learning_rate` : **0.1**
            """)
            st.markdown("üéØ **Best Accuracy** : `0.9248`")

    with st.expander("üéöÔ∏è Seuil de d√©cision (`threshold`) personnalis√©", expanded=False):
        st.markdown("Le mod√®le retourne une **probabilit√©** de classe positive (1).")
        st.markdown("Par d√©faut, le seuil est fix√© √† `0.5`. Mais on peut l'ajuster selon l'objectif :")

        st.markdown("""
    - üî∫ **Augmenter le seuil** ‚Üí Moins de faux positifs  
    - üîª **R√©duire le seuil** ‚Üí Moins de faux n√©gatifs  
    - üéØ **Trouver le seuil optimal F1**
        """)

        st.image("src/streamlit/img/XGBoost - Binaire_fp_fn_threshold.png", caption="√âvolution de la pr√©cision, du rappel et du F1 Score selon le seuil", use_container_width=True)

        st.markdown("#### ‚úÖ Seuil optimal trouv√© : `0.41`")

with tab3:
    st.subheader("Deep Learning - 5 Classes")

    with st.expander("üìå **Explication du mod√®le**", expanded=False):
        st.image("src/streamlit/img/schema_DL.png", caption="Sch√©ma du mod√®le de Deep Learning", use_container_width=True)
        st.text("Notre mod√®le se base sur Bert pour l'analyse de texte, concat√©n√© avec la m√©tadonn√©e, suivi d'une s√©rie de couches Linear et ReLU.")
        st.text("La fonction de perte utilis√©e est le MSE.")
        st.text("Finalement, seul le day_diff est utilis√© en m√©tadonn√©e.")
    with st.expander("üìå **R√©sum√© de la performance du mod√®le**", expanded=False):
        col1 , col2  = st.columns([3,2])
        with col1:
            st.markdown("### üìà Matrice de confusion - Mod√®le Deep Learning 5 classes")
            st.image("src/streamlit/img/DL_cm.png", caption="Matrice de confusion Deep Learning 5 classes", use_container_width=True)
            st.markdown("> ‚úÖ Mod√®le entra√Æn√© sur un dataset √† 5 classes.")

            st.markdown("---")

            st.markdown("### üìä M√©triques principales")

            st.code("""accuracy  : 0.52
RMSE  : 0.82""", language="python")

    with st.expander("Comparaison des mod√®les √† 5 classes", expanded=False):
        col1 , col2  = st.columns([1,1])
        with col1:
            st.image("src/streamlit/img/xgboost_5_classes_cm.png", caption="Matrice de confusion 5 classes", use_container_width=True)
        with col2:
            st.image("src/streamlit/img/DL_cm.png", caption="Matrice de confusion Deep Learning 5 classes", use_container_width=True)
        # Cr√©ation des donn√©es du tableau
        data = {
            "Mod√®le" : ["XGBoost", "Deep Learning"],
            "Accuracy": ["0.48", "0.52"],
            "RMSE": ["1.06", "0.82"]
        }

        # Conversion en DataFrame
        df = pd.DataFrame(data)

        # Affichage du tableau sur Streamlit
        st.table(df)
    
# Footer with modern style
st.markdown(
    """
    <style>
    .footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #f8f9fa;
        text-align: center;
        padding: 10px 0;
        font-size: 14px;
        color: #6c757d;
        border-top: 1px solid #dee2e6;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }
    .footer a {
        color: #007bff;
        text-decoration: none;
    }
    .footer a:hover {
        text-decoration: underline;
    }
    </style>
    <div class="footer">
        Cr√©√© par <a href="">Baptiste Audroin</a>, <a href="">Jean-Claude Nguyen<a/> et <a href="">Steffen Morvan</a>
    </div>
    """,
    unsafe_allow_html=True
)